{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4555cf43c1efb7a0a8a6","webpack:///./src/easy-query-dsl.js"],"names":["EasyQuery","options","queryString","_parse","query","keys","key","_stringToKeyValues","matches","Object","length","push","trim","default","field","values","selectors","km","match","selector","_keyValueToSelector","$and","remainingQuery","names","alias","map","a","join","regex","RegExp","m","exec","index","lastIndex","value","_splitMultiValues","replace","split","keyValue","type","_numberKeyValueToSelector","_textKeyValueToSelector","_stringKeyValueToSelector","opts","caseSensitive","_escapeRegExp","pattern","fuzzy","v","$regex","$options","$or","str","operator","startsWith","substring","Number","isNaN","searchString","$text","$search","$caseSensitive","$diacriticSensitive","diacriticSensitive"],"mappings":"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","file":"easy-query-dsl.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easyQuery\"] = factory();\n\telse\n\t\troot[\"easyQuery\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4555cf43c1efb7a0a8a6","class EasyQuery {\n\n  constructor(options = {}) {\n    this.options = options;\n  }\n\n  parse(queryString) {\n    return EasyQuery._parse(queryString, this.options);\n  }\n\n  static _parse(query, options) {\n\n    let keys = [];\n    /* Go over every keyword */\n    for (let key of options.keys) {\n      let {matches, queryString} = EasyQuery._stringToKeyValues(query, key);\n      query = queryString;\n      if (Object.keys(matches).length > 0) {\n        keys.push({key: key, matches: matches});\n      }\n    }\n\n    /* Finally run default over the remaining string */\n    query = query.trim();\n    if (query.length > 0) {\n      keys.push({\n        key: options.default,\n        matches: [{\n          field: options.default.field, values: [query]}\n        ]}\n      );\n    }\n\n    /* Convert key -> values to selectors */\n    let selectors = [];\n    for (let km of keys)Â {\n      for (let match of km.matches) {\n        let selector = EasyQuery._keyValueToSelector(match, km.key);\n        if (Object.keys(selector).length > 0) {\n          selectors.push(selector);\n        }\n      }\n    }\n\n    if(selectors.length == 1) {\n      return selectors[0];\n    } else {\n      return {$and: selectors};\n    }\n  }\n\n  static _stringToKeyValues(queryString, key) {\n\n    let remainingQuery = queryString;\n\n    let matches = [];\n\n    /* Map alias a to non-capturing groups */\n    let names =  key.alias.map(a => `(?:${a})`);\n\n    /* Create regex list of the different key names */\n    names = key.alias.join('|');\n\n    /* Regex to get the key value pairs, allow either quoted or non-quoted values. */\n    let regex = new RegExp(`(?:\\\\s*(?:${names}):\\\\s?\"([^\"]*)\"\\\\s*|\\\\s*(?:${names}):\\\\s?([^\\\\s]*)\\\\s*)`, 'gi');\n\n    let m = null;\n    while (m = regex.exec(queryString)) {\n      if (m.index === regex.lastIndex) {\n        /* Avoids infinite loops with zero-width matches */\n        regex.lastIndex++;\n      }\n\n      /* Check if group 1 or 2 matches */\n      let value = m[1] ? m[1] : m[2];\n\n      value = EasyQuery._splitMultiValues(value);\n\n      /* Save the match and remove from the queryString */\n      matches.push({field: key.field, values: value});\n      remainingQuery = remainingQuery.replace(m[0], '');\n    }\n\n    return {matches: matches, queryString: remainingQuery};\n\n  }\n\n  static _splitMultiValues(value) {\n    /* Splits a value string in to multiple using the delimitor */\n    return value.split(';');\n  }\n\n  static _keyValueToSelector(keyValue, key) {\n\n    switch (key.type) {\n\n      case 'number':\n        return EasyQuery._numberKeyValueToSelector(keyValue, key);\n\n      case 'text':\n        return EasyQuery._textKeyValueToSelector(keyValue, key);\n\n      default:\n        return EasyQuery._stringKeyValueToSelector(keyValue, key);\n\n    }\n\n  }\n\n  static _stringKeyValueToSelector(keyValue, key) {\n\n    let values = [];\n    let options = key.opts.caseSensitive ? 'g' : 'gi';\n\n    let field = key.field;\n    for(let value of keyValue.values) {\n      /* Escape regex characters */\n      value = EasyQuery._escapeRegExp(value);\n\n      /* Generate pattern */\n      let pattern = key.opts.fuzzy ? `.*${value}.*` : value;\n\n      /* Create selector */\n      let v = {}\n      v[field] = { $regex: pattern, $options: options };\n\n      values.push(v);\n    }\n\n    if(values.length == 1) {\n      return values[0];\n    } else {\n      return {$or: values};\n    }\n\n  }\n\n  static _escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  }\n\n  static _numberKeyValueToSelector(keyValue, key) {\n\n    let values = [];\n\n    let field = key.field;\n    for(let value of keyValue.values) {\n\n      let operator = \"$eq\";\n      if(value.startsWith('>=')) {\n        operator = '$gte';\n        value = value.substring(2);\n      } else if (value.startsWith('<=')) {\n        operator = '$lte';\n        value = value.substring(2);\n      } else if (value.startsWith('>')) {\n        operator = '$gt';\n        value = value.substring(1);\n      } else if (value.startsWith('<')) {\n        operator = '$lt';\n        value = value.substring(1);\n      } else if (value.startsWith('!')) {\n        operator = '$ne';\n        value = value.substring(1);\n      }\n\n      value = Number(value);\n      if (isNaN(value)) {\n        continue;\n      }\n\n      /* Create selector */\n      let v = {}\n      v[field] = {};\n      v[field][operator] = value;\n\n      values.push(v);\n    }\n\n    if(values.length == 1) {\n      return values[0];\n    } else {\n      return {$or: values};\n    }\n\n  }\n\n  static _textKeyValueToSelector(keyValue, key) {\n\n    let searchString = keyValue.values.join(' ');\n    return {\n      $text: {\n        $search: searchString,\n        $caseSensitive: key.opts.caseSensitive,\n        $diacriticSensitive: key.opts.diacriticSensitive\n      }\n    };\n\n  }\n\n}\n\nexport default EasyQuery;\n\n\n\n// WEBPACK FOOTER //\n// ./src/easy-query-dsl.js"],"sourceRoot":""}