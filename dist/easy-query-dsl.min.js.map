{"version":3,"sources":["easy-query-dsl.min.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","EasyQuery","options","arguments","undefined","instance","TypeError","_classCallCheck","queryString","_parse","query","keys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_EasyQuery$_stringToK","_stringToKeyValues","matches","push","err","return","trim","default","field","values","selectors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","km","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","match","selector","_keyValueToSelector","$and","remainingQuery","names","alias","map","a","join","regex","RegExp","exec","index","lastIndex","_splitMultiValues","replace","split","keyValue","type","_numberKeyValueToSelector","_textKeyValueToSelector","_stringKeyValueToSelector","opts","caseSensitive","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_escapeRegExp","pattern","fuzzy","v","$regex","$options","$or","str","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","operator","startsWith","substring","Number","isNaN","$text","$search","$caseSensitive","$diacriticSensitive","diacriticSensitive"],"mappings":"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","file":"easy-query-dsl.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easyQuery\"] = factory();\n\telse\n\t\troot[\"easyQuery\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EasyQuery = function () {\n  function EasyQuery() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EasyQuery);\n\n    this.options = options;\n  }\n\n  _createClass(EasyQuery, [{\n    key: 'parse',\n    value: function parse(queryString) {\n      return EasyQuery._parse(queryString, this.options);\n    }\n  }], [{\n    key: '_parse',\n    value: function _parse(query, options) {\n\n      var keys = [];\n      /* Go over every keyword */\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options.keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          var _EasyQuery$_stringToK = EasyQuery._stringToKeyValues(query, key),\n              matches = _EasyQuery$_stringToK.matches,\n              queryString = _EasyQuery$_stringToK.queryString;\n\n          query = queryString;\n          if (Object.keys(matches).length > 0) {\n            keys.push({ key: key, matches: matches });\n          }\n        }\n\n        /* Finally run default over the remaining string */\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      query = query.trim();\n      if (query.length > 0) {\n        keys.push({\n          key: options.default,\n          matches: [{\n            field: options.default.field, values: [query] }] });\n      }\n\n      /* Convert key -> values to selectors */\n      var selectors = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = keys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var km = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = km.matches[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var match = _step3.value;\n\n              var selector = EasyQuery._keyValueToSelector(match, km.key);\n              if (Object.keys(selector).length > 0) {\n                selectors.push(selector);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (selectors.length == 1) {\n        return selectors[0];\n      } else {\n        return { $and: selectors };\n      }\n    }\n  }, {\n    key: '_stringToKeyValues',\n    value: function _stringToKeyValues(queryString, key) {\n\n      var remainingQuery = queryString;\n\n      var matches = [];\n\n      /* Map alias a to non-capturing groups */\n      var names = key.alias.map(function (a) {\n        return '(?:' + a + ')';\n      });\n\n      /* Create regex list of the different key names */\n      names = key.alias.join('|');\n\n      /* Regex to get the key value pairs, allow either quoted or non-quoted values. */\n      var regex = new RegExp('(?:\\\\s*(?:' + names + '):\\\\s?\"([^\"]*)\"\\\\s*|\\\\s*(?:' + names + '):\\\\s?([^\\\\s]*)\\\\s*)', 'gi');\n\n      var m = null;\n      while (m = regex.exec(queryString)) {\n        if (m.index === regex.lastIndex) {\n          /* Avoids infinite loops with zero-width matches */\n          regex.lastIndex++;\n        }\n\n        /* Check if group 1 or 2 matches */\n        var value = m[1] ? m[1] : m[2];\n\n        value = EasyQuery._splitMultiValues(value);\n\n        /* Save the match and remove from the queryString */\n        matches.push({ field: key.field, values: value });\n        remainingQuery = remainingQuery.replace(m[0], '');\n      }\n\n      return { matches: matches, queryString: remainingQuery };\n    }\n  }, {\n    key: '_splitMultiValues',\n    value: function _splitMultiValues(value) {\n      /* Splits a value string in to multiple using the delimitor */\n      return value.split(';');\n    }\n  }, {\n    key: '_keyValueToSelector',\n    value: function _keyValueToSelector(keyValue, key) {\n\n      switch (key.type) {\n\n        case 'number':\n          return EasyQuery._numberKeyValueToSelector(keyValue, key);\n\n        case 'text':\n          return EasyQuery._textKeyValueToSelector(keyValue, key);\n\n        default:\n          return EasyQuery._stringKeyValueToSelector(keyValue, key);\n\n      }\n    }\n  }, {\n    key: '_stringKeyValueToSelector',\n    value: function _stringKeyValueToSelector(keyValue, key) {\n\n      var values = [];\n      var options = key.opts.caseSensitive ? 'g' : 'gi';\n\n      var field = key.field;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = keyValue.values[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n\n          /* Escape regex characters */\n          value = EasyQuery._escapeRegExp(value);\n\n          /* Generate pattern */\n          var pattern = key.opts.fuzzy ? '.*' + value + '.*' : value;\n\n          /* Create selector */\n          var v = {};\n          v[field] = { $regex: pattern, $options: options };\n\n          values.push(v);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (values.length == 1) {\n        return values[0];\n      } else {\n        return { $or: values };\n      }\n    }\n  }, {\n    key: '_escapeRegExp',\n    value: function _escapeRegExp(str) {\n      return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    }\n  }, {\n    key: '_numberKeyValueToSelector',\n    value: function _numberKeyValueToSelector(keyValue, key) {\n\n      var values = [];\n\n      var field = key.field;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = keyValue.values[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n\n          var operator = \"$eq\";\n          if (value.startsWith('>=')) {\n            operator = '$gte';\n            value = value.substring(2);\n          } else if (value.startsWith('<=')) {\n            operator = '$lte';\n            value = value.substring(2);\n          } else if (value.startsWith('>')) {\n            operator = '$gt';\n            value = value.substring(1);\n          } else if (value.startsWith('<')) {\n            operator = '$lt';\n            value = value.substring(1);\n          } else if (value.startsWith('!')) {\n            operator = '$ne';\n            value = value.substring(1);\n          }\n\n          value = Number(value);\n          if (isNaN(value)) {\n            continue;\n          }\n\n          /* Create selector */\n          var v = {};\n          v[field] = {};\n          v[field][operator] = value;\n\n          values.push(v);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      if (values.length == 1) {\n        return values[0];\n      } else {\n        return { $or: values };\n      }\n    }\n  }, {\n    key: '_textKeyValueToSelector',\n    value: function _textKeyValueToSelector(keyValue, key) {\n\n      var searchString = keyValue.values.join(' ');\n      return {\n        $text: {\n          $search: searchString,\n          $caseSensitive: key.opts.caseSensitive,\n          $diacriticSensitive: key.opts.diacriticSensitive\n        }\n      };\n    }\n  }]);\n\n  return EasyQuery;\n}();\n\nexports.default = EasyQuery;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=easy-query-dsl.js.map"]}